?pcs
?pch
points(may$Wind, may$Ozone, pch = 24, col = 'blue')
points(may$Wind, may$Ozone, pch = 17, col = 'blue')
points(may$Wind, may$Ozone,  col = 'blue', pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone,  col = 'blue', pch = 17)
points(notmay$Wind, notmay$Ozone,  col = 'blue', pch = 8)
points(notmay$Wind, notmay$Ozone,  col = 'red', pch = 8)
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May","Other Months"))
abline(v = mean(airquality$Wind), lty = 2)
abline(v = mean(airquality$Wind), lty = 2, lwd = 2)
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind" )
plot(airquality$Ozone, airquality$Solar, main = "Ozone and Wind" )
plot(airquality$Ozone, airquality$Solar, main = "Ozone and Solar Radiation" )
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation" )
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation" )
plot( airquality$Solar.R, airquality$Ozone,  main = "Ozone and Solar Radiation" )
plot( airquality$Temp, airquality$Ozone,  main = "Ozone and Temperature" )
mtext("Ozone and Weather in New York City", outer = TRUE)
data = read.csv('C:/Users/Mas Mobiliario SAS/Dropbox/especializacion_coursera/semana4_bayes.csv')
dat
data
datF <- subset(data, gender ==1, select=1:2)
datF
plot(datF$distance,datF$percentage)
par(mfrow = c(2,1))
datF <- subset(data, gender ==1, select=1:2)
plot(datF$distance, datF$percentage)
datM <- subset(data, gender ==0, select=1:2)
plot(datM$distance, datM$percentage)
par(mfrow = c(2,1))
plot(datF$distance, datF$percentage)
plot(datM$distance, datM$percentage)
datM
data
datM <- subset(data, gender ==2, select=1:2)
par(mfrow = c(2,1))
datF <- subset(data, gender ==1, select=1:2)
datM <- subset(data, gender ==2, select=1:2)
plot(datF$distance, datF$percentage)
plot(datM$distance, datM$percentage)
par(mfrow = c(1,2))
datF <- subset(data, gender ==1, select=1:2)
datM <- subset(data, gender ==2, select=1:2)
plot(datF$distance, datF$percentage)
plot(datM$distance, datM$percentage)
model = lm(percentage ~ distance , data = datF)
model
summary(model)
y =  130.89331 - 0.25649*260
y
datF
64.2-5.246*qt(.975,155)*sqrt(1+1/157+((260-mean(dataF$distance))^2/156/var(dataF$distance)))
64.2-5.246*qt(.975,155)*sqrt(1+1/157+((260-mean(datF$distance))^2/156/var(datF$distance)))
64.2+5.246*qt(.975,155)*sqrt(1+1/157+((260-mean(datF$distance))^2/156/var(datF$distance)))
data
data$gender = ifelse(data$gender==2,0,1)
data
model = lm(percentage ~ distance + gender , data = dat)
model = lm(percentage ~ distance + gender , data = data)
summary(model)
data = read.csv('C:/Users/Mas Mobiliario SAS/Dropbox/especializacion_coursera/semana4_bayes.csv')
data$gender = ifelse(data$gender==1,0,1)
data
model = lm(percentage ~ distance + gender , data = data)
summary(model)
data
plot(fitted(model), residuals(model))
library(swirl)
swirl(9)
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = 'red', pch = 8, main = 'Big Apple Data')
xyplot(Ozone~Wind, data = airquality, col = 'red', pch = 8, main = 'Big Apple Data')
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = 'Big Apple Data')
xyplot(Ozone~Wind, data = airquality,  pch = 8 ,col = "red", main = 'Big Apple Data')
xyplot(Ozone~Wind \, data = airquality,  pch = 8 ,col = "red", main = 'Big Apple Data')
xyplot(Ozone~Wind | as.factor(Month), data = airquality,  pch = 8 ,col = "red", main = 'Big Apple Data', layout = c(5,1))
xyplot(Ozone~Wind | as.factor(Month), data = airquality,  layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality,  layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[['x.limits']]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
pathoffile('plot1.R')
pathofile('plot1.R')
source(pathofile('plot1.R'), local = TRUE)
source(pathtofile('plot1.R'), local = TRUE)
myedit("plot2.R")
source(pathtofile('plot2.R'), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile('myLabels.R'), local = TRUE)
xyplot(price~carat | color*cut , data = diamonds, strip strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut , data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut , data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len = 6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2<- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun construct
?fun
?construct
?grb
?rgb
p3<- colorRampPalette(c("blue","green"), alpha = 0.5)
p3(5)
plot(x,y, pch = 19, col = rgb(0,0.5,0.5))
plot(x,y, pch = 19, col = rgb(0,0.5,0.5,0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
swirl()
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg, color = drv)
qplot(displ,hwy,data = mpg, color = drv,c('point','smooth'))
qplot(displ,hwy,data = mpg, color = drv,geom = c('point','smooth'))
qplot(y = hwy, data = mpg, color = drv
)
myhigh
qplot(drv, y = hwy, data = mpg, geom = "boxplot")
qplot(drv, y = hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = 'drv')
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot( hwy, data = mpg, facets = .~drv, binwidth = 2)
qplot( hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ,hwy, data = mpg, geom = c('point','smooth'))
qplot(displ,hwy, data = mpg, geom = c('point','smooth'), facets = .~drv)
g <- ggplot(mpg, aestethics(displ,hwy))
g <- ggplot(mpg, aesthethics(displ,hwy))
g <- ggplot(mpg, aesthetics(displ,hwy))
g <- ggplot(mpg, aesthetics= c('displ','hwy'))
g <- ggplot(mpg, aes(displ,hwy))
summary(g)
g
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = 'lm')
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(. ~ drv) + ggtitle("Swirl Rules")
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = 'pink', size = 4, alpha = 1/2)
g + geom_point( size = 4, alpha = 1/2, aes(color = drv))
g + geom_point( size = 4, alpha = 1/2, aes(color = drv))
g + geom_point( size = 4, alpha = 1/2, color = drv)
g + geom_point( size = 4, alpha = 1/2, aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "displacement", y = "Hwy Mileage")
g + geom_point( aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "displacement", y = "Hwy Mileage")
g + geom_point( aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point( aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 2, method = "lm", se = FALSE)
g + geom_point( aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point( aes(color = drv))+theme_bw(base_family = "Times")
plot(mxy,myy, type = "l", ylim = c(-3,3))
plot(myx,myy, type = "l", ylim = c(-3,3))
ggplot(data = testdata, aes(x = myx, y = myy))
ggplot(data = testdat, aes(x = myx, y = myy))
ggplot(testdat, aes(x = myx, y = myy))
g<-ggplot(testdat, aes(x = myx, y = myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<- ggplot(data = mpg, aes(x = displ, y = hwy))
g<- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut())
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut
)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth = "lm")
qplot(carat, price, data = diamonds, color = cut) +  geom_smooth(method= "lm")
qplot(carat, price, data = diamonds, color = cut, factes = .~cut ) +  geom_smooth(method= "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut ) +  geom_smooth(method= "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length.out = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(dendogram(hc))
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h = 1.5, col = 'blue')
abline(h = 0.4, col = 'red')
4
5
abline(h = 0.05, col = 'red')
12
abline(h = 0.05, col = 'green')
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col  = c("red","orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
tapply(x,newClust, mean)
tapply(y,newClust, mean)
points(newCx,newCy,pch = 8, cex = 2, col = cols1)
points(newCx,newCy,pch = 8, cex = 2, col = cols1, lwd = 2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2,2,which.min)
points(newCx,newCy,col=cols1[newClust2],pch=19,cex=2)
points(x,y,col=cols1[newClust2],pch=19,cex=2)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2, lwd =2)
kmeans(dataFrame, centers = 3)
kmobj$iter
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19 , cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
points(kmObj$centers, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
points(x,y,kmObj$centers, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
points(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,'|')
cnames <- strsplit(cnames,'|', fixed = TRUE)
cnames <- strsplit(cnames,'|', fixed = TRUE)
cnames
quit+
quit
nest
next
next()
exit()
exit
library(swirl)
swirl()
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
sumamry(x0)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <-  as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
?intersetc
?intersect
intersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt0<- subset(pm0, State.Code == 36 & county.side %in% boht)
cnt0<- subset(pm0, State.Code == 36 & county.side %in% both)
cnt0<- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1<- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,2))
par(mfrow = c(1,2), mar = c(4,4,2,))
1
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub, pch = 20)
abline(median(x0sub), lwd = 2, na.rm= TRUE)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1,x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <-  with(pm0, tapply(Sample.Value,State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <-  with(pm1, tapply(Sample.Value,State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame()
d0 <- data.frame(names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn1), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52),mrg[,2],xlim = c(0.5,2.5)))
with(mrg, points(rep(2,52),mrg[,3])
)
segments()
segments()
segments(mrg)
segments(mrg[,2],mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
setwd('C:/Users/Mas Mobiliario SAS/datasciencecoursera/RepData_PeerAssessment1')
unzip('activity.zip', file = 'activity.csv')
datos = read.csv('activity.csv', header = TRUE)
library(data.table)
datos = as.data.table(datos)
datos$date = as.Date(as.character(datos$date), "%Y-%m-%d")
datos
numer_of_nas = sum(any(is.na(datos)))
numer_of_nas
any(is.na(datos)
)
is.na(datos)
?any
numer_of_nas = sum(lapply(datos, function(x){any(is.na(x))}))
lapply(datos, function(x){any(is.na(x))})
numer_of_nas = sum(lapply(t(datos), function(x){any(is.na(x))}))
lapply(t(datos), function(x){any(is.na(x))})
numer_of_nas = sum(sapply(t(datos), function(x){any(is.na(x))}))
number_of_nas
numer_of_nas
datos
medians = datos[, median(na.omit(steps)), by = interval ]
medians
summary(medians$V1)
dt <- data.frame(age=rchisq(20,10),group=sample(1:2,20,rep=T))
ddply(dt,~group,summarise,mean=mean(age),sd=sd(age))
library(ddply)
install.packages("ddply")
install.packages("plyr")
library(plyr)
dt <- data.frame(age=rchisq(20,10),group=sample(1:2,20,rep=T))
ddply(dt,~group,summarise,mean=mean(age),sd=sd(age))
medians = datos[, medians : = median(na.omit(steps)), by = interval ]
medians = datos[, medians := median(na.omit(steps)), by = interval ]
medians
medians
dim(datos
)
medians[, interval = 0]
medians[, interval == 0]
medians[, interval = 0, with = FALSE]
medians[interval = 0 , , with = FALSE]
medians[interval = 0 ,  with = FALSE]
medians[interval = 0 ,]
medians[Interval = 0 ,]
medians
medians[interval = 0,]
medians[interval == '0',]
medians[interval == 0,]
medians[interval == 1,]
medians[interval == 2,]
medians[interval == '2',]
medians
medians[interval == '5',]
medians[medians > 0 ,]
medians[interval == '650',]
medians[, new_steps:= ifelse(is.na(steps), medians, steps)]
medians
medians[is.na(steps),]
a = medians[, sum(na.omit(new_steps)), by = date]
names(a) = c('date', 'steps_per_day')
library(ggplot2)
ggplot(data = a , aes(steps_per_day)) + geom_histogram(binwidth = 3000, fill = 'red')
medians[, weekdays(date),]
medians
?weekdays
medians[, weekend :=ifelse(weekdays(date) %in% c('sábado','domingo')),]
a = medians[, weekdays(date),]
a
table(a)
medians[, weekend :=ifelse(weekdays(date) %in% c('sábado','domingo'), 'weekend','weekday'),]
medians
b = datos[, mean(na.omit(steps)), by = list(interval,weekend)]
b
b[interval == 0,]
b[interval == 5,]
b[interval == 1000,]
names(b) = c('interval','weekend','average_steps')
with(b, xyplot(interval, average_steps, type = "l"))
library(lattice)
with(b, xyplot(interval, average_steps, type = "l"))
?xyplot
with(b, xyplot(average_steps  ~ interval | weekend , type = "l"))
?xyplot
with(b, xyplot(average_steps  ~ interval | weekend , horizontal = FALSE, type = "l"))
with(b, xyplot(average_steps  ~ interval | weekend , horizontal = TRUE, type = "l"))
with(b, xyplot(average_steps  ~ interval | weekend , horizontal = TRUE, type = "l"))
states <- data.frame(state.x77,
state.name = dimnames(state.x77)[[1]],
state.region = state.region)
xyplot(Murder ~ Population | state.region, data = states,
groups = state.name,
panel = function(x, y, subscripts, groups) {
ltext(x = x, y = y, labels = groups[subscripts], cex=1,
fontfamily = "HersheySans")
})
with(b, xyplot(average_steps  ~ interval | weekend , layout = c(2,1), type = "l"))
with(b, xyplot(average_steps  ~ interval | weekend , layout = c(1,2), type = "l"))
medians[, weekend := ifelse(weekdays(date) %in% c('sábado','domingo'), 'weekend','weekday'),]
medians
b = datos[, mean(na.omit(steps)), by = list(interval,weekend)]
names(b) = c('interval','weekend','average_steps')
library(lattice)
with(b, xyplot(average_steps  ~ interval | weekend , layout = c(1,2), type = "l"))
medians
sum(is.na(medians$new_steps))
b = medians[, sum(na.omit(steps)), by = date]
names(b) = c('date', 'steps_per_day')
ggplot(data = b , aes(steps_per_day)) + geom_histogram(binwidth = 3000, fill = 'red')
ggplot(data = a , aes(steps_per_day)) + geom_histogram(binwidth = 3000, fill = 'red')
medians = datos[, medians := mean(na.omit(steps)), by = interval ]
medians = datos[, medians_1 := mean(na.omit(steps)), by = interval ]
medians[, new_steps_2:= ifelse(is.na(steps), medians_1, steps)]
a = medians[, sum(na.omit(new_steps_2)), by = date]
names(a) = c('date', 'steps_per_day')
ggplot(data = a , aes(steps_per_day)) + geom_histogram(binwidth = 3000, fill = 'red')
